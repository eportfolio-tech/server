version: "3.3"
services:
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKER_CONFIG_PATH}:/config.json
    environment:
      WATCHTOWER_NOTIFICATIONS: slack
      WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL: ${SLACK_HOOK_URL}
      WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER: watchtower
      WATCHTOWER_NOTIFICATION_SLACK_CHANNEL: #build-deployment
      WATCHTOWER_NOTIFICATION_SLACK_ICON_EMOJI: ":whale:"
      WATCHTOWER_NOTIFICATIONS_LEVEL: info
    #  Check if new docker image exist every 300 seconds
    # clean-up old images
    command: --interval 60  --cleanup
    restart: unless-stopped

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000"
      - "10001:10001"
    volumes:
      - azure_blob_data:/data
    command: azurite-blob --blobHost 0.0.0.0 --blobPort 10000
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:management
    volumes:
      #      - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
      - rabbit_data:/var/lib/rabbitmq/
      - rabbit_log:/var/log/rabbitmq/
    environment:
      #        RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${SPRING_RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${SPRING_RABBITMQ_PASSWORD}
    ports:
      - "127.0.0.1:${SPRING_RABBITMQ_PORT}:5672"
      - "127.0.0.1:${RABBITMQ_WEB_PORT}:15672"
    restart: always

  redis:
    image: redis:alpine
    ports:
      - "127.0.0.1:${SPRING_REDIS_PORT}:26379"
    volumes:
      - ../redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data:/data
    entrypoint: redis-server /usr/local/etc/redis/redis.conf --requirepass ${SPRING_REDIS_PASSWORD}
    restart: always

  server:
    image: docker.pkg.github.com/eportfolio-tech/server/eportfolio-tech-server:dev
    ports:
      - ${SERVER_PORT}:8090
    volumes:
      - /var/log/eportfolio/:/var/log/eportfolio/
    restart: always
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - redis

volumes:
  azure_blob_data:
  redis_data:
  rabbit_data:
  rabbit_log:
