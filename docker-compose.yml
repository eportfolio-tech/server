version: "3.3"
services:
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/haswell/.docker/config.json:/config.json
    environment:
      WATCHTOWER_NOTIFICATIONS: slack
      WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL: https://hooks.slack.com/services/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
      WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER: watchtower
      WATCHTOWER_NOTIFICATION_SLACK_CHANNEL: #build-deployment
      WATCHTOWER_NOTIFICATION_SLACK_ICON_EMOJI: ":whale:"
      WATCHTOWER_NOTIFICATIONS_LEVEL: info
      #  Check if new docker image exist every 300 seconds
      # clean-up old images
    command: --interval 60  --cleanup
    restart: unless-stopped

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000"
      - "10001:10001"
    volumes:
      - azure_blob_data:/data
    command: azurite-blob --blobHost 0.0.0.0 --blobPort 10000
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:management
    environment:
      - RABBITMQ_DEFAULT_USER: "comp30022"
      - RABBITMQ_DEFAULT_PASS: "renlord"
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always

  dev:
    image: docker.pkg.github.com/haswf/comp30022backenddev/eportfolio-server-docker:dev
    ports:
      - "8090:8090"
    volumes:
      - /var/log/eportfolio/:/var/log/eportfolio/
    restart: always
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USER: "comp30022"
      SPRING_RABBIT_PASS: "renlord"
    depends_on:
      - rabbitmq

  sonarqube:
    image: sonarqube:7.9.4-community
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - ./sonarqube:/opt/sonarqube/conf
    restart: unless-stopped


volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  azure_blob_data: