plugins {
    id 'org.springframework.boot' version '2.3.4.BUILD-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.0"
    id 'jacoco'
}

group = 'tech.eportfolio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

ext {
    set('azureVersion', "2.3.1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.microsoft.azure:azure-spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.batch:spring-batch-test'
    compile 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'net.andreinc.mockneat:mockneat:0.3.9'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'commons-validator:commons-validator:1.7'
    implementation 'joda-time:joda-time:2.10.6'
    implementation 'com.auth0:auth0:1.20.0'
    implementation 'com.auth0:auth0-spring-security-api:1.4.0'
    implementation 'org.passay:passay:1.6.0'
    testImplementation 'org.springframework.security:spring-security-test:5.3.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-test:2.3.3.RELEASE'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation 'org.mockito:mockito-core:3.5.13'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:2.3.3.RELEASE'
    implementation 'com.microsoft.azure:azure-storage:8.6.5'
    implementation 'commons-io:commons-io:20030203.000550'
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'com.talanlabs:avatar-generator:1.1.0'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'org.springframework.amqp:spring-amqp:2.2.11.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-amqp:2.3.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.3.4.RELEASE'
    implementation 'redis.clients:jedis:3.3.0'
}

dependencyManagement {
    imports {
        mavenBom "com.microsoft.azure:azure-spring-boot-bom:${azureVersion}"
    }
}

def profiles = System.getenv('PROFILE')

bootRun {
    args = ["--spring.profiles.active=" + profiles]
}

build {
}

test {
    systemProperty "spring.profiles.active", "test"
    useJUnitPlatform()
}
test.finalizedBy jacocoTestReport
tasks['sonarqube'].dependsOn test

sonarqube {
    properties {
        property 'sonar.host.url', 'https://sonarqube.eportfolio.tech'
        property 'sonar.projectKey', '349v9g6xuO3QDRMtAQj6jkOZDbgxSBpCx2kyHBWY'
        property 'sonar.login', '861a734ac0c83799580894175939b6763b8bb1e0'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}